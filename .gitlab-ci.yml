stages:
- test
- analyze
- build
- deploy

include:
  template: SAST.gitlab-ci.yml

###########################
# Templates               #
#                         #
# make sure all jobs use  #
# architecture tags.      #
###########################
.job: &job
  before_script:
  - ./.gitlab-ci/$CI_JOB_STAGE/$CI_JOB_NAME.sh setup
  dependencies: []
  except: [schedules]
  tags:
  - amd64
  script:
  - ./.gitlab-ci/$CI_JOB_STAGE/$CI_JOB_NAME.sh

.job_aarch64: &job_aarch64
  <<: *job
  tags:
  - aarch64

.dind: &dind
  <<: *job
  tags:
  - amd64-dind
  image: docker:19-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
  services:
  - docker:19-dind

#######
# Tests
#######
.dispatcher: &dispatcher
  <<: *job
  stage: test
  image: hub.lavasoftware.org/lava/ci-images/$CI_JOB_NAME
  artifacts:
    reports:
      junit: dispatcher.xml
      junit: dispatcher-host.xml
      junit: coordinator.xml

.server: &server
  <<: *job
  stage: test
  image: hub.lavasoftware.org/lava/ci-images/$CI_JOB_NAME
  artifacts:
    reports:
      junit:
      - common.xml
      - server.xml

amd64/dispatcher-debian-10: *dispatcher
amd64/server-debian-10: *server
amd64/dispatcher-debian-11: *dispatcher
amd64/server-debian-11: *server
aarch64/dispatcher-debian-10:
  <<: *dispatcher
  tags:
  - aarch64-dind
aarch64/server-debian-10:
  <<: *server
  tags:
  - aarch64-dind

###########
# Analyze #
###########
.analyze: &analyze
  <<: *job
  image: hub.lavasoftware.org/lava/ci-images/amd64/analyze
  stage: analyze

black:
  <<: *analyze

code_quality:
  <<: *analyze
  artifacts:
    reports:
      codequality: gl-code-quality-report.json

coverage:
  <<: *analyze
  image: hub.lavasoftware.org/lava/ci-images/amd64/server-debian-10
  coverage: '/^TOTAL.+ (\d+\.\d+)%$/'
  artifacts:
    paths:
    - htmlcov/

dockerfiles:
  <<: *analyze

schemas:
  <<: *analyze

pylint:
  <<: *analyze

sast:
  stage: analyze
  tags:
  - amd64-dind
  variables:
    SAST_DEFAULT_ANALYZERS: "bandit"


codespell:
  <<: *analyze

#########
# Build #
#########
doc:
  <<: *job
  stage: build
  image: hub.lavasoftware.org/lava/ci-images/amd64/pkg-debian-10
  artifacts:
    paths:
    - doc/v2/_build/html

debian/10:
  <<: *job
  stage: build
  except: []
  image: hub.lavasoftware.org/lava/ci-images/amd64/pkg-debian-10
  artifacts:
    paths:
    - _build/*.deb
    # handle native package - need to publish the source
    - _build/*.tar.xz
    - _build/*.dsc
    - _build/*.changes
    - _build/*.buildinfo

debian/11:
  <<: *job
  stage: build
  except: []
  image: hub.lavasoftware.org/lava/ci-images/amd64/pkg-debian-11
  artifacts:
    paths:
    - _build/*.deb
    # handle native package - need to publish the source
    - _build/*.tar.xz
    - _build/*.dsc
    - _build/*.changes
    - _build/*.buildinfo

.docker: &docker
  <<: *dind
  stage: build
  before_script:
  - .gitlab-ci/$CI_JOB_STAGE/docker.sh setup
  script:
  - SERVICE="$(echo "$CI_JOB_NAME" | cut -d "-" -f 3)"
  - .gitlab-ci/$CI_JOB_STAGE/docker.sh "$SERVICE"

.docker_aarch64: &docker_aarch64
  <<: *docker
  tags: [aarch64-dind]

docker-amd64-dispatcher: *docker
docker-amd64-server: *docker
docker-aarch64-dispatcher: *docker_aarch64
docker-aarch64-server: *docker_aarch64

##########
# Deploy #
##########

lavafed-master:
  <<: *job
  stage: deploy
  tags: [deploy]
  except: []
  only: [schedules]
  environment:
    name: lavafed-master
    url: https://federation.lavasoftware.org/lava/

reprepro-master:
  <<: *job
  stage: deploy
  # Environments and therefore runners are tied to
  # a specific branch. You'll see this message:
  # "This job is creating a deployment to reprepro-master and
  # will overwrite the latest deployment."
  tags: [deploy]
  dependencies:
  - debian/10
  - debian/11
  except: []
  only: [schedules]
  environment:
    name: reprepro-master
    url: https://apt.lavasoftware.org

reprepro-release:
  <<: *job
  stage: deploy
  # Environments and therefore runners are tied to
  # a specific branch. You'll see this message:
  # "This job is creating a deployment to reprepro-release and
  # will overwrite the latest deployment."
  tags: [deploy]
  only:
    refs:
    - tags
  dependencies:
  - debian/10
  - debian/11
  except: [schedules]
  environment:
    name: reprepro-release
    url: https://apt.lavasoftware.org

doc-deploy:
  stage: deploy
  tags: [deploy]
  only:
    refs:
    - tags
  dependencies:
  - doc
  script:
  - mkdir -p ${HOME}/docs/lava
  - rsync -av --delete doc/v2/_build/html ${HOME}/docs/lava/
  environment:
    name: documentation
    url: https://docs.lavasoftware.org/lava/
