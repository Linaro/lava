# Sample JOB definition for LAVA dispatcher

device_type: qemu

job_name: sample
timeouts:
  job:
    hours: 8             # timeout for the whole job (default: ??h)
  action:
   minutes: 30         # default timeout applied for each action; can be overriden in the action itself (default: ?h)
logging_level: DEBUG
priority: medium
visibility: public

context:
  arch: amd64

actions:

    #- commands:
    #    # list of pre-defined scripts installed by the server administrator at
    #    # /etc/lava-server/commands.d/* to be invoked
    #    #
    #    # Each called script will have the data in the job definition (+ plus
    #    # the actual device where the test is running) passed in by environment
    #    # variables
    #    - power-off

    - deploy:
        timeout:  # passed into the python datetime.timedelta class
          minutes: 20
        to: sata
        images:
          rootfs:
            url: http://myimage.com/target.img.gz
            compression: gz
        os: debian

    - deploy:
        # formats the device, creates a single partition there and explodes the
        # provided tarball there
        to: usb
        rootfs: http://myimage.com/rootfs.tgz
        overlay: http://myimage.com/overlay.tgz
        fstype: ext3
        os: fedora

    - deploy:
        to: nfs
        rootfs: http://myimage.com/rootfs.tgz
        os: oe

    - deploy:
        partitions:
            boot: http://myimage.com/boot.img
            system: http://myimage.com/system.img
            cache: http://myimage.com/cache.img
        os: android

    - boot:
        method: tftp
        media: nfs
        kernel: http://myimage.com/zImage
        kernel_args: "bla bla bla"
        failure_retry: 10
        prompts:
          - 'linaro-test'
          - 'root@debian:~#'

    - test:
        failure_retry: 6
        name: ptest # is not present, use "test $N"
        definitions:
            - from: url
              path: file:///path/to/testdef.yaml
              name: ptest-dbus
            - from: url
              path: http:///url.to/testdef.yaml
              name: ptest-perl
            - from: git
              repository: git://url.ro/repo.git
              path: testdef.yaml
              name: ptest-foobar

    - boot:
        timeout:
          minutes: 20
        method: block
        media: sata
        prompts:
          - 'linaro-test'
          - 'root@debian:~#'

    - boot:
        timeout:
          hours: 1
        method: tftp
        media: usb
        kernel: http://myimage.com/zImage
        boot_cmds: “blah blah blah”
        prompts:
          - 'linaro-test'
          - 'root@debian:~#'

    - boot:
        method: fastboot
        media: whatever
        prompts:
          - 'linaro-test'
          - 'root@debian:~#'

    - repeat:
        count: 10
        actions:
            # just a list of commands
        - boot:
            method: block
            media: sata
            prompts:
              - 'linaro-test'
              - 'root@debian:~#'
        - test:
            definitions:
              - from: url
                path: file:///path/to/testdef.yaml
                name: unsupported
                commands:  # FIXME: not supported yet
                    - ls -l
        - boot:
            method: fastboot
            media: whatever
            prompts:
              - 'linaro-test'
              - 'root@debian:~#'


    ## includes other YAML test definitions at this point
    ## Only the list of actions will be included.
    #- include:
    #    - from: url
    #      path: http:///url.to/testdef.yaml
    #    - from: git
    #      repository: git://url.ro/repo.git
    #      path: testdef.yaml

    #- if:
    #    condition: ... # ← DEFINING THIS IS THE REAL PROBLEM
    #    true:
    #        # just a list of commands
    #        - boot:
    #            method: block
    #            media: sata
    #    false:
    #        # just a list of commands
    #        - test:
    #            commands:
    #                - ls -l

    ## TODO: implementing this, try to implement TI's requirement with other
    ## existing features.
    #- in_parallel:
    #    # a list of other commands that will run in parallel
    #    - sequence:
    #        - connection: serial2
    #        - test:
    #            commands:
    #                - ls -l
    #                - sleep 30m
    #                - ls -l
    #        - sync: foobar # will wait for the sync in the sequence below
    #        - test:
    #            commands:
    #                - something else
    #    - sequence:
    #        - connection: ssh
    #        - sync: foobar # will wait for the sync in the sequence above
    #        - test:
    #            commands:
    #                - suspend
    #        - test:
    #            commands:
