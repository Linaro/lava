device_type: juno

usb_filesystem_label: juno

parameters:
  media:  # four USB slots.
    usb:
      UUID-required: True
      SanDisk_Ultra:
        uuid: "usb-SanDisk_Ultra_20051536410F43008552-0:0"
        device_id: 0  # the bootloader device id for this media on the 'usb' interface

commands:
  connect: telnet localhost 7002
  hard_reset: /usr/local/lab-scripts/pduclient --daemon services --hostname pdu14 --command off --port 02; sleep 10; /usr/local/lab-scripts/pduclient --daemon services --hostname pdu14 --command on --port 02
  power_off: /usr/local/lab-scripts/pduclient --daemon services --hostname pdu14 --command off --port 02
  power_on: /usr/local/lab-scripts/pduclient --daemon services --hostname pdu14 --command on --port 02

character-delays:
  boot: 50

constants:
  shutdown-message: "The system is going down for reboot NOW"
  boot-message: "Booting Linux"
  cpu-reset-message: "Resetting CPU"
  default-shell-prompt: "lava-test: # "
  uboot-autoboot-prompt: "Hit any key to stop autoboot"
  uboot-interrupt-character: " "

actions:
  deploy:
    # list of deployment methods which this device supports
    methods:
      tftp:
      nfs:
      vemsd:
        parameters:
          mcc_prompt: 'Cmd>'
          msd_mount_cmd: 'usb_on'
          flash_prompt: 'Flash>'
          flash_enter_cmd: 'flash'
          flash_erase_cmd: 'eraseall'
          flash_erase_msg: 'Erasing Flash'
          flash_exit_cmd: 'exit'
          autorun_prompt: 'Press Enter to stop auto boot...'
  boot:
    # list of connection methods which this device supports
    connections:
      serial:
    # list of boot methods which this device supports.
    methods:
      uefi:
        parameters:
           bootloader_prompt: 'Shell>'
           shell_interrupt_prompt: 'any other key to continue'
           shell_interrupt_string: ' '
           boot_message: 'Linux version'
           # shell_menu=shell refers to actions.boot.methods.uefi.shell
           shell_menu: shell
           # Menu options
           interrupt_prompt: The default boot selection will start in
           interrupt_string: ' '
           menu_boot_message: 'UEFI Interactive Shell'
           menu_prompt: 'Start:' # Or 'Shutdown' if Start never appears, some firmware doesn't have this
           item_markup:
           - '['
           - ']'
           item_class: '0-9'
           separator: ' '
           line_separator: 'dos'
           label_class: 'a-zA-Z0-9\s\:'
        # Default menu commands to drop to shell
        shell:
        - select:
            items:
            - 'Shell'
        nfs:
           commands:
           - norkern console=ttyAMA0,115200n8 root=/dev/nfs rw nfsroot={SERVER_IP}:{ROOTFS},tcp,hard,intr rootwait earlycon=pl011,0x7ff80000 debug systemd.log_target=null user_debug=31 androidboot.hardware=juno loglevel=9 sky2.mac_address=0x00,0x02,0xf7,0x00,0x68,0x03 ip=dhcp
        usb:
          # This assumes that an image has been dd'ed to the USB device
          # and that this device then contains two partitions, sda1 and sda2.
          # The first, is the boot device, which appears in UEFI as <uefi_usb_id>.
          # The second is the root filesystem.
          commands:
          # Go to usb boot partition
          - "BLK1:"
          # Launch Image from boot partition, specifying sda2 as the root filesystem.
          - Image console=ttyAMA0,115200n8 root=/dev/sda2 rootwait earlycon=pl011,0x7ff80000 debug systemd.log_target=null user_debug=31 androidboot.hardware=juno loglevel=9 sky2.mac_address=0x00,0x02,0xf7,0x00,0x68,0x03 ip=dhcp dtb=juno.dtb
      uefi-menu:
        parameters:
          character_delay: 300 
          interrupt_prompt: The default boot selection will start in
          interrupt_string: ' '
          item_markup:
            - "["
            - "]"
          item_class: '0-9'
          separator: ' '
          label_class: 'a-zA-Z0-9\s\:'
          bootloader_prompt: 'Start:'
          boot_message: "Linux version"
          # interrupt: # character needed to interrupt u-boot, single whitespace by default
          # method specific stanza
        nor_flash:
        -  select:
            items:
             - 'Boot Manager'
            wait: "Choice:"
        - select:
            items:
               - 'Add Boot Device Entry'
            wait: "Select the Boot Device:"
        - select:
            items:
               - 'NOR Flash'
            wait: "File path of the EFI Application or the kernel:"
        - select:
            enter: norkern
            wait: "Is an EFI Application?"
        - select:
            enter: n
            wait: "Has FDT support?"
        - select:
            enter: y
            wait: "Add an initrd:"
        - select:
            enter: n
            wait: 'Arguments to pass to the binary:'
        - select: 
            enter: "dtb=board.dtb initrd=ramdisk.img console=ttyAMA0,115200 androidboot.hardware=juno systemd.log_target=null rootwait root=/dev/sda1"
            wait: 'Description for this new Entry:'
        - select:
            enter: '{TEST_MENU_NAME}'
            wait: "Choice:"
        - select:
            items:
              - 'Update FDT path'
            wait: "Select the Boot Device:"
        - select:
            items:
               - 'TFTP on MAC Address: 00:02:F7:00:58:EB'  # substitute the MAC in the template
            wait: "File path of the FDT blob:"
        - select:
            enter: 'board.dtb'
            wait: "Choice:"
        - select:
            items:
               - 'Return to main menu'
            wait: "Start:"
        - select:
            items:
              - '{TEST_MENU_NAME}'
        tftp:
        - select:
            items:
             - 'Boot Manager'
            wait: "Choice:"
        - select:
            items:
               - 'Add Boot Device Entry'
            wait: "Select the Boot Device:"
        - select:
            items:
               - 'TFTP on MAC Address: 00:02:F7:00:58:EB'  # substitute the MAC in the template
            wait: "Get the IP address from DHCP:"
        - select:
            enter: y
            wait: "Get the TFTP server IP address:"
        - select:
            enter: '{SERVER_IP}'
            wait: "File path of the EFI Application or the kernel :"
        - select:
            enter: '{KERNEL}'
            wait: "Is an EFI Application?"
        - select:
            enter: n
            wait: "Has FDT support?"
        - select:
            enter: y
            wait: "Add an initrd:"
        - select:
            enter: n
            wait: 'Arguments to pass to the binary:'
        - select:
            enter: "console=ttyS0,115200 earlyprintk=uart8250-32bit,0x1c020000 debug root=/dev/nfs rw nfsroot={SERVER_IP}:{NFSROOTFS},tcp,hard,intr ip=dhcp"
            wait: 'Description for this new Entry:'
        - select:
            enter: '{TEST_MENU_NAME}'
            wait: "Choice:"
        - select:
            items:
              - 'Update FDT path'
            wait: "Select the Boot Device:"
        - select:
            items:
               - 'TFTP on MAC Address: 00:02:F7:00:58:EB'  # substitute the MAC in the template
            wait: "Get the IP address from DHCP:"
        - select:
            enter: y
            wait: "Get the TFTP server IP address:"
        - select:
            enter: '{SERVER_IP}'
            wait: "File path of the FDT blob :"
        - select:
            enter: '{DTB}'
            wait: "Choice:"
        - select:
            items:
               - 'Return to main menu'
            wait: "Start:"
        - select:
            items:
              - '{TEST_MENU_NAME}'
