From: Antonio Terceiro <antonio.terceiro@linaro.org>
Date: Mon, 7 Feb 2022 11:05:04 -0300
Subject: lava_dispatcher_host: skip BPF test on containers

In a container, it's very unlikely that the kernel headers installed
from the container OS matches the kernel running on the host, so the
probability that compiling a BPF program works is minimal. Skip that one
test on containers to avoid disrupting CI runs everywhere.
---
 tests/lava_dispatcher_host/test_docker_devices.py | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/tests/lava_dispatcher_host/test_docker_devices.py b/tests/lava_dispatcher_host/test_docker_devices.py
index 9fd55f5..69f47bb 100644
--- a/tests/lava_dispatcher_host/test_docker_devices.py
+++ b/tests/lava_dispatcher_host/test_docker_devices.py
@@ -14,6 +14,7 @@
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 from lava_dispatcher_host.docker_devices import Device, DeviceFilter
+import subprocess
 import pytest
 
 try:
@@ -24,6 +25,9 @@ except ImportError:
     has_bcc = False
 
 
+container = subprocess.call(["systemd-detect-virt", "--container", "--quiet"]) == 0
+
+
 @pytest.fixture(autouse=True)
 def check_output(mocker):
     return mocker.patch("subprocess.check_output")
@@ -155,6 +159,7 @@ class TestDeviceFilterCGroupsV2:
         assert DeviceFilter("foobar").__get_existing_functions__() == []
 
     @pytest.mark.skipif(not has_bcc, reason="bcc not available")
+    @pytest.mark.skipif(container, reason="this test won't work on containers")
     def test_apply(self, mocker, check_call, fd, os_close):
         load_func = mocker.patch("bcc.BPF.load_func")
         attach_func = mocker.patch("bcc.BPF.attach_func")
